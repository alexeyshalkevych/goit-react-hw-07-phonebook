{"version":3,"sources":["components/ContactForm/FormSchema.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Containers/FormContainer.js","Constants/actionNames.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/Containers/ContactContainer.js","components/ContactList/ContactList.styled.js","theme/transition/slide.transition.js","components/ContactList/ContactList.js","redux/filter/filterSelectors.js","redux/contacts/contactsSelectors.js","redux/loader/loaderSelectors.js","components/Containers/ContactListContainer.js","components/ContactFilter/ContactFilter.styled.js","components/ContactFilter/ContactFilter.js","components/Containers/ContactFilterContainer.js","redux/filter/filterActions.js","components/Error/Error.styled.js","components/Error/Error.js","components/Phonebook/Phonebook.styled.js","theme/transition/popText.transition.js","theme/transition/pop.transition.js","components/Phonebook/Phonebook.js","redux/error/errorSelectors.js","components/Containers/PhonebookContainer.js","components/App/App.js","redux/contacts/contactsReducer.js","redux/filter/filterReducer.js","redux/loader/loaderReducer.js","redux/error/errorReducer.js","redux/contacts/contactsActions.js","utils/helpers.js","configs/firebase_config.js","utils/firebaseHelpers.js","redux/contacts/contactsSaga.js","redux/store.js","index.js"],"names":["FormSchema","Yup","shape","name","min","max","required","number","FormContainer","styled","form","Label","label","InputField","input","ErrorInput","div","Button","button","ContactForm","addContact","initialValues","validationSchema","onSubmit","values","resetForm","handleChange","handleSubmit","isSubmitting","htmlFor","id","type","value","onChange","component","disabled","connect","dispatch","contact","LoaderContainer","Loader","color","height","width","timeout","ContactContainer","ContactName","span","ContactNumber","DeleteButton","Contact","deleteContact","onClick","List","ul","li","Slide","transition","attrs","unmountOnExit","ContactList","contacts","loader","TransitionGroup","map","key","getFilter","state","filter","getContacts","getFilteredContacts","createSelector","toLowerCase","includes","getLoader","ContactFilter","changeFilter","e","target","mapDispatchToProps","payload","ErrorContainer","ErrorTitle","h1","Error","PhonebookContainer","PhonebookTitle","PhonebookSubTitle","h2","Notification","ToastContainer","SlideTitle","PopFilter","Phonebook","getAllContacts","error","useState","showTitle","setShowTitle","useEffect","in","length","autoClose","defaultProps","getError","App","contactReducer","filteredState","filterReducer","loaderReducer","action","errorReducer","addContactSuccess","deleteContactSuccess","convertDataFromDataBase","data","Object","keys","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","checkedContactInDataBase","a","path","childName","itemName","ref","orderByChild","equalTo","once","snapshot","exists","val","getContactsWorker","addContactWorker","deleteContactWorker","getContactsWatcher","addContactWatcher","deleteContactWatcher","rootSaga","createEventChannel","listener","eventChannel","emit","on","off","addContactToDataBase","push","deleteContactFromDataBase","child","remove","put","call","channel","take","items","toast","takeLatest","all","rootReducer","combineReducers","contactsReducer","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","store","createStore","composeWithDevTools","run","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.1670b04c.chunk.js","sourcesContent":["import * as Yup from 'yup';\n\nconst FormSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Must be longer than 2 characters')\n    .max(20, 'Nice try, nobody has a first name that long')\n    .required('Required'),\n  number: Yup.number()\n    .min(777777, 'Must be longer than 6 characters')\n    .required('Required'),\n});\n\nexport default FormSchema;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.form`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px;\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.59);\n\n  input[type='number']::-webkit-inner-spin-button,\n  input[type='number']::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`;\n\nexport const Label = styled.label`\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 1.2;\n  font-weight: 500;\n`;\n\nexport const InputField = styled.input`\n  display: block;\n  width: 100%;\n  margin-bottom: 15px;\n  padding: 8px 5px;\n  border-radius: 4px;\n  border: 1px solid rgb(126, 126, 126);\n\n  :focus {\n    border-color: rgb(0, 106, 177);\n    outline: none;\n  }\n`;\n\nexport const ErrorInput = styled.div`\n  margin: 0;\n  color: red;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 100%;\n  padding: 10px 5px;\n  font-family: sans-serif;\n  font-size: 14px;\n  line-height: 1.2;\n  font-weight: 400;\n  color: #fff;\n  background-color: rgb(0, 106, 177);\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.75);\n  transition: all 0.2s ease-in;\n\n  :hover {\n    cursor: pointer;\n    background-color: rgb(19, 19, 138);\n  }\n\n  :disabled {\n    cursor: default;\n    background-color: rgb(85, 85, 85);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, ErrorMessage } from 'formik';\nimport FormSchema from './FormSchema';\nimport {\n  FormContainer,\n  Label,\n  InputField,\n  Button,\n  ErrorInput,\n} from './ContactForm.styled';\n\nconst ContactForm = ({ addContact }) => {\n  const initialValues = {\n    name: '',\n    number: 0,\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    addContact({ ...values });\n\n    resetForm({});\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={FormSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values, handleChange, handleSubmit, isSubmitting }) => (\n        <FormContainer onSubmit={handleSubmit}>\n          <Label htmlFor=\"name\">\n            Name\n            <InputField\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              value={values.name}\n              onChange={handleChange}\n            />\n            <ErrorMessage name=\"name\" component={ErrorInput} />\n          </Label>\n          <Label htmlFor=\"number\">\n            Number\n            <InputField\n              id=\"number\"\n              type=\"number\"\n              name=\"number\"\n              value={values.number === 0 ? '' : values.number}\n              onChange={handleChange}\n            />\n            <ErrorMessage name=\"number\" component={ErrorInput} />\n          </Label>\n          <Button type=\"submit\" disabled={isSubmitting}>\n            Add contact\n          </Button>\n        </FormContainer>\n      )}\n    </Formik>\n  );\n};\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import { connect } from 'react-redux';\nimport ContactForm from '../ContactForm/ContactForm';\nimport { ADD_CONTACT } from '../../Constants/actionNames';\n\nconst mapDispatchToProps = dispatch => ({\n  addContact: contact => dispatch({ type: ADD_CONTACT, contact }),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","export const CHANGE_FILTER = 'CHANGE_FILTER';\n\nexport const FETCH_CONTACTS = 'FETCH_CONTACTS';\nexport const FETCH_CONTACTS_REQUEST = 'FETCH_CONTACTS_REQUEST';\nexport const FETCH_CONTACTS_SUCCESS = 'FETCH_CONTACTS_SUCCESS';\nexport const FETCH_CONTACTS_ERROR = 'FETCH_CONTACTS_ERROR';\n\nexport const ADD_CONTACT = 'ADD_CONTACT';\nexport const ADD_CONTACT_REQUEST = 'ADD_CONTACT_REQUEST';\nexport const ADD_CONTACT_SUCCESS = 'ADD_CONTACT_SUCCESS';\nexport const ADD_CONTACT_ERROR = 'ADD_CONTACT_ERROR';\n\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\nexport const DELETE_CONTACT_REQUEST = 'DELETE_CONTACT_REQUEST';\nexport const DELETE_CONTACT_SUCCESS = 'DELETE_CONTACT_SUCCESS';\nexport const DELETE_CONTACT_ERROR = 'DELETE_CONTACT_ERROR';\n","import styled from 'styled-components';\n\nconst LoaderContainer = styled.div`\n  padding-top: 25px;\n  text-align: center;\n`;\n\nexport default LoaderContainer;\n","import React from 'react';\nimport Spinner from 'react-loader-spinner';\nimport LoaderContainer from './Loader.styled';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst Loader = () => (\n  <LoaderContainer>\n    <Spinner\n      type=\"ThreeDots\"\n      color=\"#13138a\"\n      height={50}\n      width={50}\n      timeout={3000} // 3 secs\n    />\n  </LoaderContainer>\n);\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const ContactContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ContactName = styled.span`\n  flex: 1 0 auto;\n`;\n\nexport const ContactNumber = styled.span`\n  margin-right: 50px;\n`;\n\nexport const DeleteButton = styled.button`\n  display: block;\n  padding: 5px 10px;\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 1.2;\n  font-weight: 400;\n  color: rgb(255, 255, 255);\n  background-color: rgb(218, 1, 1);\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.75);\n  transition: all 0.2s ease-in;\n\n  :hover {\n    cursor: pointer;\n    background-color: rgb(170, 0, 0);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ContactContainer,\n  ContactName,\n  ContactNumber,\n  DeleteButton,\n} from './Contact.styled';\n\nconst Contact = ({ contact: { id, name, number }, deleteContact }) => (\n  <ContactContainer>\n    <ContactName>{name}</ContactName>\n    <ContactNumber>{number}</ContactNumber>\n    <DeleteButton type=\"button\" onClick={() => deleteContact(id)}>\n      &#10006;\n    </DeleteButton>\n  </ContactContainer>\n);\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.number.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import { connect } from 'react-redux';\nimport Contact from '../Contact/Contact';\nimport { DELETE_CONTACT } from '../../Constants/actionNames';\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: id => dispatch({ type: DELETE_CONTACT, id }),\n});\n\nexport default connect(null, mapDispatchToProps)(Contact);\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  padding: 10px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.59);\n`;\n","import transition from 'styled-transition-group';\n\nconst Slide = transition.li.attrs({\n  unmountOnExit: true,\n  timeout: 250,\n})`\n  padding: 10px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.59);\n\n  &:enter { \n    opacity: 0;\n    transform: translateX(-100%); \n  }\n\n  &:enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;\n  }\n\n  &:exit { \n    opacity: 1;\n    transform: translateX(0);\n  }\n\n  &:exit-active {\n    opacity: 0;\n    transform: translateX(-100%);\n    transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;\n  }\n`;\n\nexport default Slide;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport Loader from '../Loader/Loader';\nimport Contact from '../Containers/ContactContainer';\nimport { List } from './ContactList.styled';\nimport Slide from '../../theme/transition/slide.transition';\n\nconst ContactList = ({ contacts, loader }) => {\n  return (\n    <>\n      <TransitionGroup component={List}>\n        {contacts.map(contact => (\n          <Slide key={contact.id}>\n            <Contact contact={contact} />\n          </Slide>\n        ))}\n      </TransitionGroup>\n\n      {loader && <Loader />}\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  loader: PropTypes.bool.isRequired,\n};\n\nexport default ContactList;\n","const getFilter = state => state.filter;\n\nexport default getFilter;\n","import { createSelector } from 'reselect';\nimport getFilter from '../filter/filterSelectors';\n\nexport const getContacts = state => state.contacts;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    ),\n);\n","const getLoader = state => state.loader;\n\nexport default getLoader;\n","import { connect } from 'react-redux';\nimport ContactList from '../ContactList/ContactList';\nimport { getFilteredContacts } from '../../redux/contacts/contactsSelectors';\nimport getLoader from '../../redux/loader/loaderSelectors';\n\nconst mapStateToProps = state => ({\n  contacts: getFilteredContacts(state),\n  loader: getLoader(state),\n});\n\nexport default connect(mapStateToProps)(ContactList);\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px 10px 15px;\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.59);\n`;\n\nexport const Label = styled.label`\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 1.2;\n  font-weight: 500;\n`;\n\nexport const InputField = styled.input`\n  display: block;\n  width: 100%;\n  padding: 8px 5px;\n  border-radius: 4px;\n  border: 1px solid rgb(126, 126, 126);\n\n  :focus {\n    border-color: rgb(0, 106, 177);\n    outline: none;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, InputField } from './ContactFilter.styled';\n\nconst ContactFilter = ({ filter, changeFilter }) => (\n  <Label>\n    Find contacts by name\n    <InputField\n      type=\"text\"\n      value={filter}\n      onChange={e => changeFilter(e.target.value)}\n    />\n  </Label>\n);\n\nContactFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nexport default ContactFilter;\n","import { connect } from 'react-redux';\nimport ContactFilter from '../ContactFilter/ContactFilter';\nimport changeFilter from '../../redux/filter/filterActions';\nimport getFilter from '../../redux/filter/filterSelectors';\n\nconst mapStateToProps = state => ({\n  filter: getFilter(state),\n});\n\nconst mapDispatchToProps = {\n  changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFilter);\n","import { CHANGE_FILTER } from '../../Constants/actionNames';\n\nconst changeFilter = value => ({\n  type: CHANGE_FILTER,\n  payload: value,\n});\n\nexport default changeFilter;\n","import styled from 'styled-components';\n\nexport const ErrorContainer = styled.div`\n  max-width: 100%;\n  height: 100vh;\n  margin: 0;\n  padding-top: 50px;\n  background-color: rgb(0, 106, 177);\n`;\nexport const ErrorTitle = styled.h1`\n  margin: 0 auto;\n  max-width: 900px;\n  text-align: center;\n  color: rgb(85, 185, 185);\n  font-size: 4rem;\n`;\n","import React from 'react';\nimport { ErrorContainer, ErrorTitle } from './Error.styled';\n\nconst Error = () => {\n  return (\n    <ErrorContainer>\n      <ErrorTitle>Something went wrong :( Please try again later.</ErrorTitle>\n    </ErrorContainer>\n  );\n};\n\nexport default Error;\n","import styled from 'styled-components';\nimport { ToastContainer } from 'react-toastify';\n\nexport const PhonebookContainer = styled.div`\n  max-width: 400px;\n  min-width: 310px;\n  margin: 0 auto;\n  padding: 30px 5px 0 5px;\n`;\n\nexport const PhonebookTitle = styled.h1`\n  margin: 0 0 10px 0;\n  font-family: sans-serif;\n  font-size: 30px;\n  line-height: 1.2;\n  font-weight: 900;\n  color: rgb(0, 106, 177);\n`;\n\nexport const PhonebookSubTitle = styled.h2`\n  margin: 0 0 10px 0;\n  font-family: sans-serif;\n  font-size: 20px;\n  line-height: 1.2;\n  font-weight: 900;\n  color: rgb(0, 106, 177);\n`;\n\nexport const Notification = styled(ToastContainer)`\n  top: -5px;\n  right: 37%;\n  padding: 6px 4px;\n  margin: 0;\n  width: 210px;\n  .Toastify__close-button {\n    display: none;\n  }\n`;\n","import transition from 'styled-transition-group';\n\nconst SlideTitle = transition.div.attrs({\n  unmountOnExit: true,\n  timeout: 500,\n})`\n  &:enter { \n    opacity: 0;\n    transform: translateX(-100%); \n  }\n\n  &:enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: opacity 500ms ease-in-out, transform 500ms ease-in-out;\n  }\n\n  &:exit { \n    opacity: 1;\n    transform: translateX(0);\n  }\n\n  &:exit-active {\n    opacity: 0;\n    transform: translateX(-100%);\n    transition: opacity 500ms ease-in-out, transform 500ms ease-in-out;\n  }\n`;\n\nexport default SlideTitle;\n","import transition from 'styled-transition-group';\n\nconst PopFilter = transition.div.attrs({\n  unmountOnExit: true,\n  timeout: 250,\n})`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px 10px 15px;\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.59);\n\n  &:enter {\n    transform: scale(0);\n  }\n\n  &:enter-active {\n    transform: scale(1);\n    transition: transform 250ms ease-in-out;\n  }\n\n  &:exit {\n    transform: scale(1);\n  }\n\n  &:exit-active {\n    transform: scale(0);\n    transition: transform 250ms ease-in-out;\n  }\n`;\n\nexport default PopFilter;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactForm from '../Containers/FormContainer';\nimport ContactList from '../Containers/ContactListContainer';\nimport ContactFilter from '../Containers/ContactFilterContainer';\nimport Error from '../Error/Error';\nimport {\n  PhonebookContainer,\n  PhonebookTitle,\n  PhonebookSubTitle,\n  Notification,\n} from './Phonebook.styled';\nimport SlideTitle from '../../theme/transition/popText.transition';\nimport PopFilter from '../../theme/transition/pop.transition';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Phonebook = ({ contacts, getAllContacts, error }) => {\n  const [showTitle, setShowTitle] = useState(false);\n\n  useEffect(() => {\n    setShowTitle(true);\n\n    getAllContacts();\n  }, [getAllContacts]);\n\n  return (\n    <>\n      {error ? (\n        <Error />\n      ) : (\n        <PhonebookContainer>\n          <SlideTitle in={showTitle}>\n            <PhonebookTitle>Phonebook</PhonebookTitle>\n          </SlideTitle>\n          <ContactForm />\n          <PhonebookSubTitle>Contacts</PhonebookSubTitle>\n          <PopFilter in={contacts.length >= 2}>\n            <ContactFilter />\n          </PopFilter>\n          <ContactList />\n          <Notification autoClose={1500} />\n        </PhonebookContainer>\n      )}\n    </>\n  );\n};\n\nPhonebook.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape([]).isRequired).isRequired,\n  getAllContacts: PropTypes.func.isRequired,\n  error: PropTypes.oneOfType([PropTypes.object]),\n};\n\nPhonebook.defaultProps = {\n  error: null,\n};\n\nexport default Phonebook;\n","const getError = state => state.error;\n\nexport default getError;\n","import { connect } from 'react-redux';\nimport Phonebook from '../Phonebook/Phonebook';\nimport { getContacts } from '../../redux/contacts/contactsSelectors';\nimport getError from '../../redux/error/errorSelectors';\nimport { FETCH_CONTACTS } from '../../Constants/actionNames';\n\nconst mapStateToProps = state => ({\n  contacts: getContacts(state),\n  error: getError(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getAllContacts: () => dispatch({ type: FETCH_CONTACTS }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\n","import React from 'react';\nimport Phonebook from '../Containers/PhonebookContainer';\n\nconst App = () => <Phonebook />;\n\nexport default App;\n","import {\n  FETCH_CONTACTS_SUCCESS,\n  ADD_CONTACT_SUCCESS,\n  DELETE_CONTACT_SUCCESS,\n} from '../../Constants/actionNames';\n\nconst contactReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case FETCH_CONTACTS_SUCCESS: {\n      return [...state, ...payload];\n    }\n\n    case ADD_CONTACT_SUCCESS: {\n      return [...state, payload];\n    }\n\n    case DELETE_CONTACT_SUCCESS: {\n      const filteredState = state.filter(contact => contact.id !== payload);\n\n      return filteredState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default contactReducer;\n","import { CHANGE_FILTER } from '../../Constants/actionNames';\n\nconst filterReducer = (state = '', { type, payload }) => {\n  switch (type) {\n    case CHANGE_FILTER: {\n      return payload;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import {\n  FETCH_CONTACTS_SUCCESS,\n  ADD_CONTACT_SUCCESS,\n  DELETE_CONTACT_SUCCESS,\n  FETCH_CONTACTS_REQUEST,\n  DELETE_CONTACT_REQUEST,\n  ADD_CONTACT_REQUEST,\n  FETCH_CONTACTS_ERROR,\n  ADD_CONTACT_ERROR,\n  DELETE_CONTACT_ERROR,\n} from '../../Constants/actionNames';\n\nconst loaderReducer = (state = false, action) => {\n  switch (action.type) {\n    case FETCH_CONTACTS_REQUEST:\n    case ADD_CONTACT_REQUEST:\n    case DELETE_CONTACT_REQUEST:\n      return true;\n\n    case FETCH_CONTACTS_SUCCESS:\n    case FETCH_CONTACTS_ERROR:\n    case ADD_CONTACT_SUCCESS:\n    case ADD_CONTACT_ERROR:\n    case DELETE_CONTACT_SUCCESS:\n    case DELETE_CONTACT_ERROR:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nexport default loaderReducer;\n","import {\n  FETCH_CONTACTS_REQUEST,\n  DELETE_CONTACT_REQUEST,\n  ADD_CONTACT_REQUEST,\n  FETCH_CONTACTS_ERROR,\n  ADD_CONTACT_ERROR,\n  DELETE_CONTACT_ERROR,\n} from '../../Constants/actionNames';\n\nconst errorReducer = (state = null, { type, payload }) => {\n  switch (type) {\n    case FETCH_CONTACTS_REQUEST:\n    case ADD_CONTACT_REQUEST:\n    case DELETE_CONTACT_REQUEST:\n      return null;\n\n    case FETCH_CONTACTS_ERROR:\n    case ADD_CONTACT_ERROR:\n    case DELETE_CONTACT_ERROR:\n      return payload.error;\n\n    default:\n      return state;\n  }\n};\n\nexport default errorReducer;\n","// import { v4 as uuidv4 } from 'uuid';\nimport {\n  FETCH_CONTACTS_SUCCESS,\n  FETCH_CONTACTS_REQUEST,\n  FETCH_CONTACTS_ERROR,\n  ADD_CONTACT_SUCCESS,\n  ADD_CONTACT_REQUEST,\n  ADD_CONTACT_ERROR,\n  DELETE_CONTACT_REQUEST,\n  DELETE_CONTACT_SUCCESS,\n  DELETE_CONTACT_ERROR,\n} from '../../Constants/actionNames';\n\nexport const getContactsRequest = () => ({ type: FETCH_CONTACTS_REQUEST });\nexport const getContactsSuccess = contacts => ({\n  type: FETCH_CONTACTS_SUCCESS,\n  payload: contacts,\n});\nexport const getContactsError = error => ({\n  type: FETCH_CONTACTS_ERROR,\n  payload: error,\n});\n\nexport const addContactRequest = () => ({ type: ADD_CONTACT_REQUEST });\nexport const addContactSuccess = contact => ({\n  type: ADD_CONTACT_SUCCESS,\n  payload: contact,\n});\nexport const addContactError = error => ({\n  type: ADD_CONTACT_ERROR,\n  payload: error,\n});\n\nexport const deleteContactRequest = () => ({ type: DELETE_CONTACT_REQUEST });\nexport const deleteContactSuccess = id => ({\n  type: DELETE_CONTACT_SUCCESS,\n  payload: id,\n});\nexport const deleteContactError = error => ({\n  type: DELETE_CONTACT_ERROR,\n  payload: error,\n});\n","/**\n * find data contact\n */\nconst findContact = (contacts, contact) =>\n  contacts.find(item => item.name === contact.name);\n\n/**\n * convert data from firebase database\n */\nconst convertDataFromDataBase = data =>\n  Object.keys(data).map(key => ({ id: key, ...data[key] }));\n\n/**\n * convert data after adding to firebase database\n */\nconst convertItemAfterAddingToDataBase = ({ config, data }) => ({\n  id: data.name,\n  ...JSON.parse(config.data),\n});\n\nexport {\n  findContact,\n  convertDataFromDataBase,\n  convertItemAfterAddingToDataBase,\n};\n","import firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: 'redux-async-phonebook.firebaseapp.com',\n  databaseURL: 'https://redux-async-phonebook.firebaseio.com',\n  projectId: 'redux-async-phonebook',\n  storageBucket: 'redux-async-phonebook.appspot.com',\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nfirebase.initializeApp(config);\nconst db = firebase.database();\n\nexport default db;\n","import db from '../configs/firebase_config';\n\n/**\n * check if exists item in firebase database\n */\nconst checkedItemInDataBase = (path, childName, itemName) =>\n  db\n    .ref(path)\n    .orderByChild(childName)\n    .equalTo(itemName.name)\n    .once('value', snapshot => snapshot.exists());\n\nconst checkedContactInDataBase = async contact => {\n  try {\n    const data = await checkedItemInDataBase('contacts', 'name', contact);\n\n    return await data.val();\n  } catch (error) {\n    throw new Error();\n  }\n};\n\nexport default checkedContactInDataBase;\n","import { call, put, all, takeLatest, take } from 'redux-saga/effects';\nimport { eventChannel } from 'redux-saga';\nimport { toast } from 'react-toastify';\nimport {\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contactsActions';\n\nimport {\n  FETCH_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n} from '../../Constants/actionNames';\nimport { convertDataFromDataBase } from '../../utils/helpers';\nimport checkedContactInDataBase from '../../utils/firebaseHelpers';\nimport db from '../../configs/firebase_config';\n\nconst createEventChannel = () => {\n  const listener = eventChannel(emit => {\n    db.ref('contacts').on('value', data => {\n      if (data.val() !== null) {\n        emit(data.val());\n      }\n    });\n\n    return () => db.ref('contacts').off(listener);\n  });\n\n  return listener;\n};\n\nconst addContactToDataBase = contact => db.ref('contacts/').push(contact);\n\nconst deleteContactFromDataBase = id => db.ref('contacts/').child(id).remove();\n\nfunction* getContactsWorker() {\n  yield put(getContactsRequest());\n\n  try {\n    const channel = yield call(createEventChannel);\n    const items = yield take(channel);\n\n    yield put(getContactsSuccess(convertDataFromDataBase(items)));\n  } catch (error) {\n    yield put(getContactsError({ error }));\n  }\n}\n\nfunction* addContactWorker({ contact }) {\n  yield put(addContactRequest());\n\n  try {\n    const isContact = yield call(checkedContactInDataBase, contact);\n\n    if (isContact) {\n      yield call(toast.error, `${contact.name} is already in contacts.`);\n      return;\n    }\n\n    const { key: id } = yield call(addContactToDataBase, contact);\n\n    yield put(addContactSuccess({ id, ...contact }));\n  } catch (error) {\n    yield put(addContactError({ error }));\n  }\n}\n\nfunction* deleteContactWorker({ id }) {\n  yield put(deleteContactRequest());\n\n  try {\n    yield call(deleteContactFromDataBase, id);\n    yield put(deleteContactSuccess(id));\n  } catch (error) {\n    yield put(deleteContactError({ error }));\n  }\n}\n\nfunction* getContactsWatcher() {\n  yield takeLatest(FETCH_CONTACTS, getContactsWorker);\n}\n\nfunction* addContactWatcher() {\n  yield takeLatest(ADD_CONTACT, addContactWorker);\n}\n\nfunction* deleteContactWatcher() {\n  yield takeLatest(DELETE_CONTACT, deleteContactWorker);\n}\n\nfunction* rootSaga() {\n  yield all([\n    getContactsWatcher(),\n    addContactWatcher(),\n    deleteContactWatcher(),\n  ]);\n}\n\nexport default rootSaga;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n// import Thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport contactsReducer from './contacts/contactsReducer';\nimport filterReducer from './filter/filterReducer';\nimport loaderReducer from './loader/loaderReducer';\nimport errorReducer from './error/errorReducer';\nimport rootSaga from './contacts/contactsSaga';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n  loader: loaderReducer,\n  error: errorReducer,\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// const enhancer = applyMiddleware(Thunk);\nconst enhancer = applyMiddleware(sagaMiddleware);\n\nconst store = createStore(rootReducer, composeWithDevTools(enhancer));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App/App';\nimport store from './redux/store';\nimport './theme/index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}