{"version":3,"sources":["components/ContactForm/FormSchema.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Containers/FormContainer.js","redux/actionTypes.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/Containers/ContactContainer.js","components/ContactList/ContactList.styled.js","transition/slide.transition.js","components/ContactList/ContactList.js","redux/filter/filterSelectors.js","redux/contacts/contactsSelectors.js","redux/loader/loaderSelectors.js","components/Containers/ContactListContainer.js","components/ContactFilter/ContactFilter.styled.js","transition/pop.transition.js","components/ContactFilter/ContactFilter.js","components/Containers/ContactFilterContainer.js","redux/filter/filterActions.js","components/Error/Error.styled.js","components/Error/Error.js","components/Phonebook/Phonebook.styled.js","transition/popText.transition.js","components/Phonebook/Phonebook.js","redux/error/errorSelectors.js","components/Containers/PhonebookContainer.js","components/App/App.js","utils/helpers.js","redux/contacts/contactsReducer.js","redux/filter/filterReducer.js","redux/loader/loaderReducer.js","redux/error/errorReducer.js","redux/contacts/contactsActions.js","services/contactsApi.js","firebase_config.js","utils/firebaseHelpers.js","redux/contacts/contactsSaga.js","redux/store.js","index.js"],"names":["FormSchema","Yup","shape","name","min","max","required","number","FormContainer","styled","form","Label","label","InputField","input","ErrorInput","div","Button","button","ContactForm","addContact","initialValues","validationSchema","onSubmit","values","resetForm","handleChange","handleSubmit","isSubmitting","htmlFor","id","type","value","onChange","autoComplete","component","disabled","connect","dispatch","contact","LoaderContainer","Loader","color","height","width","timeout","ContactContainer","ContactName","span","ContactNumber","DeleteButton","Contact","item","deleteContact","onClick","List","ul","li","Slide","transition","attrs","unmountOnExit","ContactList","contacts","loader","TransitionGroup","map","key","getFilter","state","filter","getContacts","getFilteredContacts","createSelector","toLowerCase","includes","getLoader","PopFilter","ContactFilter","changeFilter","in","length","e","target","mapDispatchToProps","payload","ErrorContainer","ErrorTitle","h1","Error","PhonebookContainer","PhonebookTitle","PhonebookSubTitle","h2","Notification","ToastContainer","SlideTitle","Phonebook","getAllContacts","error","useState","showTitle","setShowTitle","useEffect","autoClose","defaultProps","getError","App","convertDataFromDataBase","data","Object","keys","convertItemBeforeAddToDataBase","config","JSON","parse","hasStateContact","find","findContact","toast","contactReducer","filteredState","filterReducer","loaderReducer","action","errorReducer","getContactsSuccess","addContactSuccess","deleteContactSuccess","axios","defaults","baseURL","getContactsFromDataBase","get","addContactToDataBase","post","deleteContactFromDataBase","delete","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","checkedContactInDataBase","a","path","childName","itemName","ref","orderByChild","equalTo","once","snapshot","exists","val","getContactsWorker","addContactWorker","deleteContactWorker","getContactsWatcher","addContactWatcher","deleteContactWatcher","rootSaga","put","call","result","takeLatest","all","rootReducer","combineReducers","contactsReducer","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","store","createStore","composeWithDevTools","run","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.3d58564d.chunk.js","sourcesContent":["import * as Yup from 'yup';\n\nconst FormSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Must be longer than 2 characters')\n    .max(20, 'Nice try, nobody has a first name that long')\n    .required('Required'),\n  number: Yup.number()\n    .min(777777, 'Must be longer than 6 characters')\n    .required('Required'),\n});\n\nexport default FormSchema;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.form`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px;\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.59);\n\n  input[type='number']::-webkit-inner-spin-button,\n  input[type='number']::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`;\n\nexport const Label = styled.label`\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 1.2;\n  font-weight: 500;\n`;\n\nexport const InputField = styled.input`\n  display: block;\n  width: 100%;\n  margin-bottom: 15px;\n  padding: 8px 5px;\n  border-radius: 4px;\n  border: 1px solid rgb(126, 126, 126);\n\n  :focus {\n    border-color: rgb(0, 106, 177);\n    outline: none;\n  }\n`;\n\nexport const ErrorInput = styled.div`\n  margin: 0;\n  color: red;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 100%;\n  padding: 10px 5px;\n  font-family: sans-serif;\n  font-size: 14px;\n  line-height: 1.2;\n  font-weight: 400;\n  color: #fff;\n  background-color: rgb(0, 106, 177);\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.75);\n  transition: all 0.2s ease-in;\n\n  :hover {\n    cursor: pointer;\n    background-color: rgb(19, 19, 138);\n  }\n\n  :disabled {\n    cursor: default;\n    background-color: rgb(85, 85, 85);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, ErrorMessage } from 'formik';\nimport FormSchema from './FormSchema';\nimport {\n  FormContainer,\n  Label,\n  InputField,\n  Button,\n  ErrorInput,\n} from './ContactForm.styled';\n\nconst ContactForm = ({ addContact }) => {\n  const initialValues = {\n    name: '',\n    number: 0,\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    addContact({ ...values });\n\n    resetForm({});\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={FormSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values, handleChange, handleSubmit, isSubmitting }) => (\n        <FormContainer onSubmit={handleSubmit}>\n          <Label htmlFor=\"name\">\n            Name\n            <InputField\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              value={values.name}\n              onChange={handleChange}\n              autoComplete=\"off\"\n            />\n            <ErrorMessage name=\"name\" component={ErrorInput} />\n          </Label>\n          <Label htmlFor=\"number\">\n            Number\n            <InputField\n              id=\"number\"\n              type=\"number\"\n              name=\"number\"\n              value={values.number === 0 ? '' : values.number}\n              onChange={handleChange}\n              autoComplete=\"off\"\n            />\n            <ErrorMessage name=\"number\" component={ErrorInput} />\n          </Label>\n          <Button type=\"submit\" disabled={isSubmitting}>\n            Add contact\n          </Button>\n        </FormContainer>\n      )}\n    </Formik>\n  );\n};\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import { connect } from 'react-redux';\nimport ContactForm from '../ContactForm/ContactForm';\nimport { ADD_CONTACT } from '../../redux/actionTypes';\n\nconst mapDispatchToProps = dispatch => ({\n  addContact: contact => dispatch({ type: ADD_CONTACT, contact }),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","export const CHANGE_FILTER = 'CHANGE_FILTER';\n\nexport const GET_CONTACTS = 'GET_CONTACTS';\nexport const GET_CONTACTS_REQUEST = 'GET_CONTACTS_REQUEST';\nexport const GET_CONTACTS_SUCCESS = 'GET_CONTACTS_SUCCESS';\nexport const GET_CONTACTS_ERROR = 'GET_CONTACTS_ERROR';\n\nexport const ADD_CONTACT = 'ADD_CONTACT';\nexport const ADD_CONTACT_REQUEST = 'ADD_CONTACT_REQUEST';\nexport const ADD_CONTACT_SUCCESS = 'ADD_CONTACT_SUCCESS';\nexport const ADD_CONTACT_ERROR = 'ADD_CONTACT_ERROR';\n\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\nexport const DELETE_CONTACT_REQUEST = 'DELETE_CONTACT_REQUEST';\nexport const DELETE_CONTACT_SUCCESS = 'DELETE_CONTACT_SUCCESS';\nexport const DELETE_CONTACT_ERROR = 'DELETE_CONTACT_ERROR';\n","import styled from 'styled-components';\n\nconst LoaderContainer = styled.div`\n  padding-top: 25px;\n  text-align: center;\n`;\n\nexport default LoaderContainer;\n","import React from 'react';\nimport Spinner from 'react-loader-spinner';\nimport LoaderContainer from './Loader.styled';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst Loader = () => (\n  <LoaderContainer>\n    <Spinner\n      type=\"ThreeDots\"\n      color=\"#13138a\"\n      height={50}\n      width={50}\n      timeout={3000} // 3 secs\n    />\n  </LoaderContainer>\n);\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const ContactContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ContactName = styled.span`\n  flex: 1 0 auto;\n`;\n\nexport const ContactNumber = styled.span`\n  margin-right: 50px;\n`;\n\nexport const DeleteButton = styled.button`\n  display: block;\n  padding: 5px 10px;\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 1.2;\n  font-weight: 400;\n  color: rgb(255, 255, 255);\n  background-color: rgb(218, 1, 1);\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.75);\n  transition: all 0.2s ease-in;\n\n  :hover {\n    cursor: pointer;\n    background-color: rgb(170, 0, 0);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ContactContainer,\n  ContactName,\n  ContactNumber,\n  DeleteButton,\n} from './Contact.styled';\n\nconst Contact = ({ item: { id, name, number }, deleteContact }) => (\n  <ContactContainer>\n    <ContactName>{name}</ContactName>\n    <ContactNumber>{number}</ContactNumber>\n    <DeleteButton type=\"button\" onClick={() => deleteContact(id)}>\n      &#10006;\n    </DeleteButton>\n  </ContactContainer>\n);\n\nContact.propTypes = {\n  item: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.number.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import { connect } from 'react-redux';\nimport Contact from '../Contact/Contact';\nimport { DELETE_CONTACT } from '../../redux/actionTypes';\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: id => dispatch({ type: DELETE_CONTACT, id }),\n});\n\nexport default connect(null, mapDispatchToProps)(Contact);\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  padding: 10px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.59);\n`;\n","import transition from 'styled-transition-group';\n\nconst Slide = transition.li.attrs({\n  unmountOnExit: true,\n  timeout: 250,\n})`\n  padding: 10px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.59);\n\n  &:enter { \n    opacity: 0;\n    transform: translateX(-100%); \n  }\n\n  &:enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;\n  }\n\n  &:exit { \n    opacity: 1;\n    transform: translateX(0);\n  }\n\n  &:exit-active {\n    opacity: 0;\n    transform: translateX(-100%);\n    transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;\n  }\n`;\n\nexport default Slide;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport Loader from '../Loader/Loader';\nimport Contact from '../Containers/ContactContainer';\nimport { List } from './ContactList.styled';\nimport Slide from '../../transition/slide.transition';\n\nconst ContactList = ({ contacts, loader }) => {\n  return (\n    <>\n      <TransitionGroup component={List}>\n        {contacts.map(item => (\n          <Slide key={item.id}>\n            <Contact item={item} />\n          </Slide>\n        ))}\n      </TransitionGroup>\n\n      {loader && <Loader />}\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  loader: PropTypes.bool.isRequired,\n};\n\nexport default ContactList;\n","const getFilter = state => state.filter;\n\nexport default getFilter;\n","import { createSelector } from 'reselect';\nimport getFilter from '../filter/filterSelectors';\n\nexport const getContacts = state => state.contacts;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    ),\n);\n","const getLoader = state => state.loader;\n\nexport default getLoader;\n","import { connect } from 'react-redux';\nimport ContactList from '../ContactList/ContactList';\nimport { getFilteredContacts } from '../../redux/contacts/contactsSelectors';\nimport getLoader from '../../redux/loader/loaderSelectors';\n\nconst mapStateToProps = state => ({\n  contacts: getFilteredContacts(state),\n  loader: getLoader(state),\n});\n\nexport default connect(mapStateToProps)(ContactList);\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px 10px 15px;\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.59);\n`;\n\nexport const Label = styled.label`\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 1.2;\n  font-weight: 500;\n`;\n\nexport const InputField = styled.input`\n  display: block;\n  width: 100%;\n  padding: 8px 5px;\n  border-radius: 4px;\n  border: 1px solid rgb(126, 126, 126);\n\n  :focus {\n    border-color: rgb(0, 106, 177);\n    outline: none;\n  }\n`;\n","import transition from 'styled-transition-group';\n\nconst PopFilter = transition.div.attrs({\n  unmountOnExit: true,\n  timeout: 250,\n})`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px 10px 15px;\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.59);\n\n  &:enter {\n    transform: scale(0);\n  }\n\n  &:enter-active {\n    transform: scale(1);\n    transition: transform 250ms ease-in-out;\n  }\n\n  &:exit {\n    transform: scale(1);\n  }\n\n  &:exit-active {\n    transform: scale(0);\n    transition: transform 250ms ease-in-out;\n  }\n`;\n\nexport default PopFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, InputField } from './ContactFilter.styled';\nimport PopFilter from '../../transition/pop.transition';\n\nconst ContactFilter = ({ contacts, filter, changeFilter }) => (\n  <PopFilter in={contacts.length >= 2}>\n    <Label>\n      Find contacts by name\n      <InputField\n        type=\"text\"\n        value={filter}\n        onChange={e => changeFilter(e.target.value)}\n      />\n    </Label>\n  </PopFilter>\n);\n\nContactFilter.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape([]).isRequired).isRequired,\n  filter: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nexport default ContactFilter;\n","import { connect } from 'react-redux';\nimport ContactFilter from '../ContactFilter/ContactFilter';\nimport changeFilter from '../../redux/filter/filterActions';\nimport { getContacts } from '../../redux/contacts/contactsSelectors';\nimport getFilter from '../../redux/filter/filterSelectors';\n\nconst mapStateToProps = state => ({\n  contacts: getContacts(state),\n  filter: getFilter(state),\n});\n\nconst mapDispatchToProps = {\n  changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFilter);\n","import { CHANGE_FILTER } from '../actionTypes';\n\nconst changeFilter = value => ({\n  type: CHANGE_FILTER,\n  payload: value,\n});\n\nexport default changeFilter;\n","import styled from 'styled-components';\n\nexport const ErrorContainer = styled.div`\n  max-width: 100%;\n  height: 100vh;\n  margin: 0;\n  padding-top: 50px;\n  background-color: rgb(0, 106, 177);\n`;\nexport const ErrorTitle = styled.h1`\n  margin: 0 auto;\n  max-width: 900px;\n  text-align: center;\n  color: rgb(85, 185, 185);\n  font-size: 4rem;\n`;\n","import React from 'react';\nimport { ErrorContainer, ErrorTitle } from './Error.styled';\n\nconst Error = () => {\n  return (\n    <ErrorContainer>\n      <ErrorTitle>Something went wrong :( Please try again later.</ErrorTitle>\n    </ErrorContainer>\n  );\n};\n\nexport default Error;\n","import styled from 'styled-components';\nimport { ToastContainer } from 'react-toastify';\n\nexport const PhonebookContainer = styled.div`\n  max-width: 400px;\n  min-width: 310px;\n  margin: 0 auto;\n  padding: 30px 5px 0 5px;\n`;\n\nexport const PhonebookTitle = styled.h1`\n  margin: 0 0 10px 0;\n  font-family: sans-serif;\n  font-size: 30px;\n  line-height: 1.2;\n  font-weight: 900;\n  color: rgb(0, 106, 177);\n`;\n\nexport const PhonebookSubTitle = styled.h2`\n  margin: 0 0 10px 0;\n  font-family: sans-serif;\n  font-size: 20px;\n  line-height: 1.2;\n  font-weight: 900;\n  color: rgb(0, 106, 177);\n`;\n\nexport const Notification = styled(ToastContainer)`\n  top: -5px;\n  right: 37%;\n  padding: 6px 4px;\n  margin: 0;\n  width: 210px;\n  .Toastify__close-button {\n    display: none;\n  }\n`;\n","import transition from 'styled-transition-group';\n\nconst SlideTitle = transition.div.attrs({\n  unmountOnExit: true,\n  timeout: 500,\n})`\n  &:enter { \n    opacity: 0;\n    transform: translateX(-100%); \n  }\n\n  &:enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: opacity 500ms ease-in-out, transform 500ms ease-in-out;\n  }\n\n  &:exit { \n    opacity: 1;\n    transform: translateX(0);\n  }\n\n  &:exit-active {\n    opacity: 0;\n    transform: translateX(-100%);\n    transition: opacity 500ms ease-in-out, transform 500ms ease-in-out;\n  }\n`;\n\nexport default SlideTitle;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactForm from '../Containers/FormContainer';\nimport ContactList from '../Containers/ContactListContainer';\nimport ContactFilter from '../Containers/ContactFilterContainer';\nimport Error from '../Error/Error';\nimport {\n  PhonebookContainer,\n  PhonebookTitle,\n  PhonebookSubTitle,\n  Notification,\n} from './Phonebook.styled';\nimport SlideTitle from '../../transition/popText.transition';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Phonebook = ({ getAllContacts, error }) => {\n  const [showTitle, setShowTitle] = useState(false);\n\n  useEffect(() => {\n    setShowTitle(true);\n\n    getAllContacts();\n  }, [getAllContacts]);\n\n  return (\n    <>\n      {error ? (\n        <Error />\n      ) : (\n        <PhonebookContainer>\n          <SlideTitle in={showTitle}>\n            <PhonebookTitle>Phonebook</PhonebookTitle>\n          </SlideTitle>\n          <ContactForm />\n          <PhonebookSubTitle>Contacts</PhonebookSubTitle>\n          <ContactFilter />\n          <ContactList />\n          <Notification autoClose={1500} />\n        </PhonebookContainer>\n      )}\n    </>\n  );\n};\n\nPhonebook.propTypes = {\n  getAllContacts: PropTypes.func.isRequired,\n  error: PropTypes.shape({}),\n};\n\nPhonebook.defaultProps = {\n  error: null,\n};\n\nexport default Phonebook;\n","const getError = state => state.error;\n\nexport default getError;\n","import { connect } from 'react-redux';\nimport Phonebook from '../Phonebook/Phonebook';\nimport { getContacts } from '../../redux/contacts/contactsSelectors';\nimport getError from '../../redux/error/errorSelectors';\nimport { GET_CONTACTS } from '../../redux/actionTypes';\n\nconst mapStateToProps = state => ({\n  contacts: getContacts(state),\n  error: getError(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getAllContacts: () => dispatch({ type: GET_CONTACTS }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\n","import React from 'react';\nimport Phonebook from '../Containers/PhonebookContainer';\n\nconst App = () => <Phonebook />;\n\nexport default App;\n","import { toast } from 'react-toastify';\n\n/**\n * find data contact\n */\nconst findContact = (contacts, contact) =>\n  contacts.find(item => item.name === contact.name);\n\n/**\n * convert data from firebase database\n */\nconst convertDataFromDataBase = data =>\n  Object.keys(data.data).map(key => ({ id: key, ...data.data[key] }));\n\n/**\n * convert data before adding to firebase database\n */\nconst convertItemBeforeAddToDataBase = ({ config, data }) => ({\n  id: data.name,\n  ...JSON.parse(config.data),\n});\n\n/**\n * save to localStorage\n */\nconst saveToLocaleStorage = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (err) {\n    throw new Error();\n  }\n};\n\n/**\n * get data from localStorage\n */\nconst getFromLocaleStorage = key => {\n  try {\n    const items = localStorage.getItem(key);\n\n    return items ? JSON.parse(items) : null;\n  } catch (err) {\n    throw new Error();\n  }\n};\n\n/**\n * check for availability data in state\n */\nconst hasStateContact = (state, contact) => {\n  const stateContact = findContact(state, contact);\n\n  if (stateContact) {\n    toast.error(`${contact.name} is already in contacts.`);\n    return true;\n  }\n\n  return false;\n};\n\nexport {\n  findContact,\n  saveToLocaleStorage,\n  getFromLocaleStorage,\n  hasStateContact,\n  convertDataFromDataBase,\n  convertItemBeforeAddToDataBase,\n};\n","import {\n  GET_CONTACTS_SUCCESS,\n  ADD_CONTACT_SUCCESS,\n  DELETE_CONTACT_SUCCESS,\n} from '../actionTypes';\nimport { hasStateContact } from '../../utils/helpers';\n\nconst contactReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case GET_CONTACTS_SUCCESS: {\n      return [...state, ...payload];\n    }\n\n    case ADD_CONTACT_SUCCESS: {\n      if (hasStateContact(state, payload)) {\n        return state;\n      }\n\n      return [...state, payload];\n    }\n\n    case DELETE_CONTACT_SUCCESS: {\n      const filteredState = state.filter(contact => contact.id !== payload);\n\n      return filteredState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default contactReducer;\n","import { CHANGE_FILTER } from '../actionTypes';\n\nconst filterReducer = (state = '', { type, payload }) => {\n  switch (type) {\n    case CHANGE_FILTER: {\n      return payload;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import {\n  GET_CONTACTS_SUCCESS,\n  ADD_CONTACT_SUCCESS,\n  DELETE_CONTACT_SUCCESS,\n  GET_CONTACTS_REQUEST,\n  DELETE_CONTACT_REQUEST,\n  ADD_CONTACT_REQUEST,\n  GET_CONTACTS_ERROR,\n  ADD_CONTACT_ERROR,\n  DELETE_CONTACT_ERROR,\n} from '../actionTypes';\n\nconst loaderReducer = (state = false, action) => {\n  switch (action.type) {\n    case GET_CONTACTS_REQUEST:\n    case ADD_CONTACT_REQUEST:\n    case DELETE_CONTACT_REQUEST:\n      return true;\n\n    case GET_CONTACTS_SUCCESS:\n    case GET_CONTACTS_ERROR:\n    case ADD_CONTACT_SUCCESS:\n    case ADD_CONTACT_ERROR:\n    case DELETE_CONTACT_SUCCESS:\n    case DELETE_CONTACT_ERROR:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nexport default loaderReducer;\n","import {\n  GET_CONTACTS_REQUEST,\n  DELETE_CONTACT_REQUEST,\n  ADD_CONTACT_REQUEST,\n  GET_CONTACTS_ERROR,\n  ADD_CONTACT_ERROR,\n  DELETE_CONTACT_ERROR,\n} from '../actionTypes';\n\nconst errorReducer = (state = null, { type, payload }) => {\n  switch (type) {\n    case GET_CONTACTS_REQUEST:\n    case ADD_CONTACT_REQUEST:\n    case DELETE_CONTACT_REQUEST:\n      return null;\n\n    case GET_CONTACTS_ERROR:\n    case ADD_CONTACT_ERROR:\n    case DELETE_CONTACT_ERROR:\n      return payload.error;\n\n    default:\n      return state;\n  }\n};\n\nexport default errorReducer;\n","// import { v4 as uuidv4 } from 'uuid';\nimport {\n  GET_CONTACTS_SUCCESS,\n  GET_CONTACTS_REQUEST,\n  GET_CONTACTS_ERROR,\n  ADD_CONTACT_SUCCESS,\n  ADD_CONTACT_REQUEST,\n  ADD_CONTACT_ERROR,\n  DELETE_CONTACT_REQUEST,\n  DELETE_CONTACT_SUCCESS,\n  DELETE_CONTACT_ERROR,\n} from '../actionTypes';\n\n/**\n * GET\n */\nexport const getContactsRequest = () => ({ type: GET_CONTACTS_REQUEST });\nexport const getContactsSuccess = contacts => ({\n  type: GET_CONTACTS_SUCCESS,\n  payload: contacts,\n});\nexport const getContactsError = error => ({\n  type: GET_CONTACTS_ERROR,\n  payload: error,\n});\n\n/**\n * POST\n */\nexport const addContactRequest = () => ({ type: ADD_CONTACT_REQUEST });\nexport const addContactSuccess = contact => ({\n  type: ADD_CONTACT_SUCCESS,\n  payload: contact,\n});\nexport const addContactError = error => ({\n  type: ADD_CONTACT_ERROR,\n  payload: error,\n});\n\n/**\n * DELETE\n */\nexport const deleteContactRequest = () => ({ type: DELETE_CONTACT_REQUEST });\nexport const deleteContactSuccess = id => ({\n  type: DELETE_CONTACT_SUCCESS,\n  payload: id,\n});\nexport const deleteContactError = error => ({\n  type: DELETE_CONTACT_ERROR,\n  payload: error,\n});\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://redux-async-phonebook.firebaseio.com';\n\nexport const getContactsFromDataBase = () => axios.get('/contacts.json');\n\nexport const addContactToDataBase = contact =>\n  axios.post('/contacts.json', contact);\n\nexport const deleteContactFromDataBase = id =>\n  axios.delete(`/contacts/${id}.json`);\n","import firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: 'redux-async-phonebook.firebaseapp.com',\n  databaseURL: 'https://redux-async-phonebook.firebaseio.com',\n  projectId: 'redux-async-phonebook',\n  storageBucket: 'redux-async-phonebook.appspot.com',\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nfirebase.initializeApp(config);\nconst db = firebase.database();\n\nexport default db;\n","import db from '../firebase_config';\n\nconst checkedItemInDataBase = (path, childName, itemName) =>\n  db\n    .ref(path)\n    .orderByChild(childName)\n    .equalTo(itemName.name)\n    .once('value', snapshot => snapshot.exists());\n\nconst checkedContactInDataBase = async contact => {\n  try {\n    const data = await checkedItemInDataBase('contacts', 'name', contact);\n\n    return await data.val();\n  } catch (error) {\n    throw new Error();\n  }\n};\n\nexport default checkedContactInDataBase;\n","import { call, put, all, takeLatest } from 'redux-saga/effects';\nimport {\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contactsActions';\nimport {\n  getContactsFromDataBase,\n  addContactToDataBase,\n  deleteContactFromDataBase,\n} from '../../services/contactsApi';\n\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT } from '../actionTypes';\nimport {\n  convertDataFromDataBase,\n  convertItemBeforeAddToDataBase,\n} from '../../utils/helpers';\nimport checkedContactInDataBase from '../../utils/firebaseHelpers';\n\nfunction* getContactsWorker() {\n  yield put(getContactsRequest());\n\n  try {\n    const contacts = yield call(getContactsFromDataBase);\n    yield put(getContactsSuccess(convertDataFromDataBase(contacts)));\n  } catch (error) {\n    yield put(getContactsError({ error }));\n  }\n}\n\nfunction* addContactWorker({ contact }) {\n  yield put(addContactRequest());\n\n  try {\n    const isContact = yield call(checkedContactInDataBase, contact);\n\n    if (isContact) {\n      yield put(addContactSuccess(contact));\n      return;\n    }\n\n    const result = yield call(addContactToDataBase, contact);\n    yield put(addContactSuccess(convertItemBeforeAddToDataBase(result)));\n  } catch (error) {\n    yield put(addContactError({ error }));\n  }\n}\n\nfunction* deleteContactWorker({ id }) {\n  yield put(deleteContactRequest());\n\n  try {\n    yield call(deleteContactFromDataBase, id);\n    yield put(deleteContactSuccess(id));\n  } catch (error) {\n    yield put(deleteContactError({ error }));\n  }\n}\n\nfunction* getContactsWatcher() {\n  yield takeLatest(GET_CONTACTS, getContactsWorker);\n}\n\nfunction* addContactWatcher() {\n  yield takeLatest(ADD_CONTACT, addContactWorker);\n}\n\nfunction* deleteContactWatcher() {\n  yield takeLatest(DELETE_CONTACT, deleteContactWorker);\n}\n\nfunction* rootSaga() {\n  yield all([\n    getContactsWatcher(),\n    addContactWatcher(),\n    deleteContactWatcher(),\n  ]);\n}\n\nexport default rootSaga;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n// import Thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport contactsReducer from './contacts/contactsReducer';\nimport filterReducer from './filter/filterReducer';\nimport loaderReducer from './loader/loaderReducer';\nimport errorReducer from './error/errorReducer';\nimport rootSaga from './contacts/contactsSaga';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n  loader: loaderReducer,\n  error: errorReducer,\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// const enhancer = applyMiddleware(Thunk);\nconst enhancer = applyMiddleware(sagaMiddleware);\n\nconst store = createStore(rootReducer, composeWithDevTools(enhancer));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App/App';\nimport store from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}